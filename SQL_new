CREATE OR REPLACE FUNCTION drape(my_wkt text) RETURNS geometry AS $$
        DECLARE
            geom3d geometry;
        begin
	        
 WITH line AS
   (SELECT my_wkt::geometry as geom),    
 points2d AS
    -- Extract its points
    (SELECT (ST_DumpPoints(geom)).geom AS geom FROM line),
  cells AS
    -- Get DEM elevation for each
    (SELECT p.geom AS geom, ST_Value(dem.rast, 1, p.geom) AS val
     FROM dem, points2d p
     WHERE ST_Intersects(dem.rast, p.geom)),
    -- Instantiate 3D points
  points3d AS
    (SELECT ST_MakePoint(ST_X(geom), ST_Y(geom), val) FROM cells)
-- Build 3D line from 3D points
SELECT ST_MakeLine(st_makepoint) FROM points3d;
           
RETURN geom3d;           
        END;
 $$ LANGUAGE plpgsql;





-- =============================================================

WITH line AS
    -- From an arbitrary line
    (SELECT 'SRID=4326;LINESTRING(35.2630972292552 54.2990374525119,35.8326833948418 54.4873462673354,35.6580866305163 54.9485927993976)'::geometry AS geom),
   points2d AS
    -- Extract its points
    (SELECT (ST_DumpPoints(geom)).geom AS geom FROM line),
  cells AS
    -- Get dem2 elevation for each
    (SELECT p.geom AS geom, ST_Value(dem2_4326.rast, 1, p.geom) AS val
     FROM dem2_4326, points2d p
     WHERE ST_Intersects(dem2_4326.rast, p.geom)),
    -- Instantiate 3D points
  points3d AS
    (SELECT ST_Force3D(ST_MakePoint(ST_X(geom), ST_Y(geom), val)) as geom FROM cells),
-- Build 3D line from 3D points
  line3d as
    (select ST_MakeLine(geom) as geom FROM points3d)
   
    select
    geom,
    ST_3DLength(geom),
--    ST_3DLength(st_transform(geom, 28407))
--    ST_Length(ST_Transform(geom, 4326)::geography),
    ST_LengthSpheroid(geom, 'SPHEROID["GRS_1980",6378137,298.257222101]')
    from line3d

  ;
